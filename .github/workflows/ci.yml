name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Préférer 'main' plutôt que 'master' (convention moderne)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Cloner le dépôt
      - name: Checkout repository
        uses: actions/checkout@v4  # Version mise à jour

      # 2. Installer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # LTS recommandé (22 peut être instable)
          cache: 'npm'  # Activation du cache pour npm

      # 3. Installer les dépendances et build (backend)
      - name: Install & Build Backend
        run: |
          cd user_management  # Correction orthographique (managment -> management)
          npm ci              # 'npm ci' pour une installation plus fiable que 'npm install'
          npm run build --if-present

      # 4. Tests
      - name: Run Tests
        run: |
          cd user_management
          npm test || echo "Tests skipped (no test suite or failure)"

      # 5. Build Docker
      - name: Build Docker Image
        run: |
          docker build -t user-management-app .  # Tag générique avant retag
          docker tag user-management-app ${{ secrets.safia }}/user-management-app:latest

      # 6. Login Docker Hub
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'  # Exécution uniquement sur main
        run: |
          echo "${{ secrets.safia }}" | docker login -u "${{ secrets.safia }}" --password-stdin

      # 7. Push Docker Image
      - name: Push to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ${{ secrets.safia }}/user-management-app:latest

      # 8. Déploiement VPS
      - name: Deploy to VPS
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.safia }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            docker pull ${{ secrets.safia }}/user-management-app:latest
            docker stop user-management || true
            docker rm user-management || true
            docker run -d \
              --name user-management \
              --restart unless-stopped \  # Redémarrage automatique
              -p 5000:5000 \
              -e NODE_ENV=production \   # Variable d'environnement
              ${{ secrets.safia }}/user-management-app:latest